/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.netsoft.web.struts.action;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.netsoft.dao.beans.EmployeeBean;
import com.netsoft.dao.beans.RolesBean;
import com.netsoft.dao.intf.IMenusDao;
import com.netsoft.dao.pojos.Employye;
import com.netsoft.dao.pojos.Menus;
import com.netsoft.services.imp.RoleServices;
import com.netsoft.services.intf.IEmployeeServices;
import com.netsoft.services.intf.IRoleServices;
import com.netsoft.util.ArraysCopy;
import com.netsoft.util.CheckUser;
import com.netsoft.web.struts.form.RoleForm;

/**
 * MyEclipse Struts Creation date: 01-16-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/role" name="roleForm" parameter="method"
 *                scope="request" validate="true"
 */
public class RoleAction extends DispatchAction {

	public IRoleServices irs;
	public IEmployeeServices ies;
	public IMenusDao imd;

	public ActionForward getAllRole(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(!CheckUser.checkSession(request, response))
		{
			return mapping.findForward(CheckUser.JUMP_URL);
		}
		List listrole = irs.getAllRoles();
		request.setAttribute("roleList", listrole);
		return mapping.findForward("roleView");
	}

	public ActionForward managerRoleView(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		if(!CheckUser.checkSession(request, response))
		{
			return mapping.findForward(CheckUser.JUMP_URL);
		}
		List listrole = irs.getAllRoles();
		request.setAttribute("role", listrole);
		return mapping.findForward("managerRoleView");
	}

	public ActionForward getPowerByRole(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(!CheckUser.checkSession(request, response))
		{
			return mapping.findForward(CheckUser.JUMP_URL);
		}
		int id = Integer.parseInt(request.getParameter("id"));
		List<Menus> allPower = imd.getAllMenus();
		log.info("所有的权限长度为：" + allPower.size());
		// Set<Menus> myPower=ies.getMenusByEmployee(eb);
		Set<Menus> myPower = irs.getMenusByRole(id);

		log.info("我的权限长度为：" + myPower.size());
		request.getSession().setAttribute("myPower", myPower);
		List otherPower = new ArrayList();
		for (Menus all : allPower) {
			int i = 0;
			for (Menus menu : myPower) {
				if (menu.getMname().equals(all.getMname())) {
					i = i + 1;
				}
			}
			if (i == 0) {
				otherPower.add(all);
			}
		}
		log.info("可以授权的权限长度为：" + otherPower.size());
		request.getSession().setAttribute("rid", id);
		request.getSession().setAttribute("otherPower", otherPower);
		return mapping.findForward("givePower");
	}

	public ActionForward addRole(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(!CheckUser.checkSession(request, response))
		{
			return mapping.findForward(CheckUser.JUMP_URL);
		}
		RoleForm rf = (RoleForm) form;
		RolesBean rb = new RolesBean();
		int size = 0;
		if (rf.getRmidptables1() != null) {
			size = size + rf.getRmidptables1().length;
		}
		if (rf.getRmidptables2() != null) {
			size = size + rf.getRmidptables2().length;
		}
		if (rf.getRmidptables3() != null) {
			size = size + rf.getRmidptables3().length;
		}
		if (rf.getRmidptables4() != null) {
			size = size + rf.getRmidptables4().length;
		}
		Integer[] rmenus = new Integer[size];
		ArraysCopy.size = 0;
		ArraysCopy.copy(rmenus, rf.getRmidptables1() == null ? new Integer[] {}
				: rf.getRmidptables1());
		ArraysCopy.copy(rmenus, rf.getRmidptables2() == null ? new Integer[] {}
				: rf.getRmidptables2());
		ArraysCopy.copy(rmenus, rf.getRmidptables3() == null ? new Integer[] {}
				: rf.getRmidptables3());
		ArraysCopy.copy(rmenus, rf.getRmidptables4() == null ? new Integer[] {}
		: rf.getRmidptables4());
		rb.setAllMenus(rmenus);
		rb.setRname(rf.getRname());
		irs.addRole(rb);
		request.setAttribute("message", "用户角色增加成功，谢谢您的操作!");
		return mapping.findForward("addRoleView");
	}

	public ActionForward roleModiView(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(!CheckUser.checkSession(request, response))
		{
			return mapping.findForward(CheckUser.JUMP_URL);
		}
		String id = request.getParameter("id");
		String name = irs.getRoleNameById(Integer.parseInt(id));
		List rolelist = new ArrayList();
		rolelist.addAll(irs.getMenusByRole(Integer.parseInt(id)));
		request.setAttribute("rolelist", rolelist);
		request.setAttribute("id", id);
		request.setAttribute("name", name);
		return mapping.findForward("roleModiView");

	}

	public ActionForward modiRole(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(!CheckUser.checkSession(request, response))
		{
			return mapping.findForward(CheckUser.JUMP_URL);
		}
		RoleForm rf = (RoleForm) form;
		RolesBean rb = new RolesBean();
		int size = 0;
		if (rf.getRmidptables1() != null) {
			size = size + rf.getRmidptables1().length;
		}
		if (rf.getRmidptables2() != null) {
			size = size + rf.getRmidptables2().length;
		}
		if (rf.getRmidptables3() != null) {
			size = size + rf.getRmidptables3().length;
		}
		if (rf.getRmidptables4() != null) {
			size = size + rf.getRmidptables4().length;
		}
		Integer[] rmenus = new Integer[size];
		ArraysCopy.size = 0;
		ArraysCopy.copy(rmenus, rf.getRmidptables1() == null ? new Integer[] {}
				: rf.getRmidptables1());
		ArraysCopy.copy(rmenus, rf.getRmidptables2() == null ? new Integer[] {}
				: rf.getRmidptables2());
		ArraysCopy.copy(rmenus, rf.getRmidptables3() == null ? new Integer[] {}
				: rf.getRmidptables3());
		ArraysCopy.copy(rmenus, rf.getRmidptables4() == null ? new Integer[] {}
				: rf.getRmidptables4());
		rb.setAllMenus(rmenus);
		rb.setRname(rf.getRname());
		rb.setId(rf.getId());
		irs.updateRole(rb);
		request.setAttribute("message", "用户角色修改成功，谢谢您的操作!");
		return mapping.findForward("addRoleView");
	}

	public IRoleServices getIrs() {
		return irs;
	}

	public void setIrs(IRoleServices irs) {
		this.irs = irs;
	}

	public IEmployeeServices getIes() {
		return ies;
	}

	public void setIes(IEmployeeServices ies) {
		this.ies = ies;
	}

	public IMenusDao getImd() {
		return imd;
	}

	public void setImd(IMenusDao imd) {
		this.imd = imd;
	}
}